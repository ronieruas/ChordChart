# Define um "upstream" que aponta para o nosso serviço de backend.
# 'backend' é o nome do serviço no docker-compose.yml e 5000 é a porta que a aplicação Python escuta.
upstream backend_service {
    server backend:5000;
}

server {
    listen 80;
    server_name localhost;

    # Serve a aplicação frontend (index.html)
    location / {
        root   /usr/share/nginx/html;
        index  index.html;
        try_files $uri $uri/ /index.html;
    }

    # Redireciona todas as chamadas para /api/ para o nosso backend
    location /api/ {
        # Usa o 'upstream' que definimos acima
        proxy_pass http://backend_service;

        # Cabeçalhos padrão para garantir que a comunicação funcione corretamente
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Envia logs para o console do Docker para facilitar a depuração
    error_log  /dev/stderr;
    access_log /dev/stdout;
}